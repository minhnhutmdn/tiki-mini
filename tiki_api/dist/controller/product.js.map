{"version":3,"sources":["../../src/controller/product.js"],"names":["config","db","api","get","req","res","find","err","products","send","json","category","params","findById","id","product","post","newProducts","name","body","price","imageUrl","branch","description","save","message","delete","remove","_id","review","put","newReview","title","text","reviews","push"],"mappings":"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","file":"product.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Product from '../model/product';\nimport Review from '../model/review';\nimport bodyParser from 'body-parser';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // '/v1/product' - GET all product\n  api.get('/', (req, res) => {\n    Product.find({}, (err, products) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(products);\n    });\n  });\n\n  // '/v1/product/categories' - GET all product in specific category\n  api.get('/categories/:category', (req, res) => {\n    Product.find({category:req.params.category}, (err, products) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(products);\n    });\n  });\n\n\n  // '/v1/product/:id' - GET a specific product\n  api.get('/:id', (req, res) => {\n    Product.findById(req.params.id, (err, product) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(product);\n    });\n  });\n\n  // '/v1/product/add' - POST - add a product\n  api.post('/add', (req, res) => {\n    let newProducts = new Product();\n    newProducts.name = req.body.name;\n    newProducts.price = req.body.price;\n    newProducts.imageUrl = req.body.imageUrl;\n    newProducts.branch = req.body.branch;\n    newProducts.category = req.body.category;\n    newProducts.description = req.body.description;\n\n    newProducts.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'Product saved successfully' });\n    });\n  });\n\n  // '/v1/product/:id' - DELETE - remove a product\n  api.delete('/:id', (req, res) => {\n    Product.remove({\n      _id: req.params.id\n    }, (err, product) => {\n      if (err) {\n        res.send(err);\n      }\n      Review.remove({\n        product: req.params.id\n      }, (err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        res.json({message: \"Products and Reviews Successfully Removed\"});\n      });\n    });\n  });\n\n  // '/v1/product/:id' - PUT - update an existing record\n  api.put('/:id', (req, res) => {\n    Product.findById(req.params.id, (err, product) => {\n      if (err) {\n        res.send(err);\n      }\n      product.name = req.body.name;\n      product.price = req.body.price;\n      product.imageUrl = req.body.imageUrl;\n      product.branch = req.body.branch;\n      product.category = req.body.category;\n      product.description = req.body.description;\n      product.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: 'Product info updated' });\n      });\n    });\n  });\n\n  // add a review by a specific product id\n  // '/v1/product/reviews/add/:id'\n  api.post('/reviews/add/:id', (req, res) => {\n    Product.findById(req.params.id, (err, product) => {\n      if (err) {\n        res.send(err);\n      }\n      let newReview = new Review();\n\n      newReview.title = req.body.title;\n      newReview.text = req.body.text;\n      newReview.product = product._id;\n      newReview.save((err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        product.reviews.push(newReview);\n        product.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Product review saved' });\n        });\n      });\n    });\n  });\n\n  // get reviews for a specific product id\n  // '/v1/product/reviews/:id'\n  api.get('/reviews/:id', (req, res) => {\n    Review.find({product: req.params.id}, (err, reviews) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(reviews);\n    });\n  });\n\n  return api;\n}\n"]}